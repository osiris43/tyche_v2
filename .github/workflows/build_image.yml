name: Build image for Tyche
on: [push]
permissions:
  id-token: write
  contents: read
jobs:
  Build-and-publish-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::009639781021:role/GHA_AWS_OIDC_toy
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: tyche
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(git rev-parse --short=6 HEAD)
          IMAGE_TAG="$DATE-$SHORT_SHA"

          echo "Using IMAGE_TAG: $IMAGE_TAG"
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          # Build and push the image with the generated tag
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          # Optionally, tag the latest image as well
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Deploy Container to Lightsail
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          DYNAMO_ENDPOINT: ${{secrets.DYNAMO_ENDPOINT}}
          AWS_REGION: us-east-2
          API_TOKEN: ${{secrets.API_TOKEN}}
        run: |
          echo "ACCESS_KEY: $AWS_ACCESS_KEY_ID"
          aws lightsail create-container-service-deployment \
            --service-name tyche \
            --region $AWS_REGION \
            --containers '{
              "tyche": {
                "image": "'"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"'",
                "environment": {
                  "AWS_ACCESS_KEY_ID": "'"$AWS_ACCESS_KEY"'",
                  "AWS_SECRET_ACCESS_KEY": "'"$AWS_SECRET_KEY"'",
                  "AWS_REGION": "'"$AWS_REGION"'",
                  "API_TOKEN": "'"$API_TOKEN"'",
                  "DYNAMODB_ENDPOINT": "'"$DYNAMODB_ENDPOINT"'"
                },
                "ports": {
                  "5050": "HTTP" 
                }
              }
            }' \
            --public-endpoint '{"containerName": "tyche", "containerPort": 5050}'
